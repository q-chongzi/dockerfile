/*==============================================================*/
/* DBMS name:      MySQL 5.0                                    */
/* Created on:     2017/12/29 星期五 13:52:51                      */
/*==============================================================*/


DROP INDEX INDEX_BUDDLE ON BUDDLE;

DROP TABLE IF EXISTS BUDDLE;

DROP INDEX INDEX_BUDDLE_H ON BUDDLE_H;

DROP TABLE IF EXISTS BUDDLE_H;

DROP INDEX INDEX_BUD_ISSUE ON BUDDLE_ISSUE;

DROP TABLE IF EXISTS BUDDLE_ISSUE;

DROP INDEX INDEX_BUD_ISSUE_H ON BUDDLE_ISSUE_H;

DROP TABLE IF EXISTS BUDDLE_ISSUE_H;

DROP TABLE IF EXISTS CAPTCHA;

DROP INDEX INDEX_CATALOG ON CATALOG;

DROP TABLE IF EXISTS CATALOG;

DROP INDEX INDEX_CATALOG_COMMENT ON CATALOG_COMMENT;

DROP TABLE IF EXISTS CATALOG_COMMENT;

DROP INDEX INDEX_CATALOG_H ON CATALOG_H;

DROP TABLE IF EXISTS CATALOG_H;

DROP INDEX INDEX_CAPAR ON CATALOG_PARAMETER;

DROP TABLE IF EXISTS CATALOG_PARAMETER;

DROP INDEX INDEX_CAPAR_H ON CATALOG_PARAMETER_H;

DROP TABLE IF EXISTS CATALOG_PARAMETER_H;

DROP INDEX INDEX_CARES ON CATALOG_RESPONSE;

DROP TABLE IF EXISTS CATALOG_RESPONSE;

DROP INDEX INDEX_CARES_H ON CATALOG_RESPONSE_H;

DROP TABLE IF EXISTS CATALOG_RESPONSE_H;

DROP INDEX INDEX_CARET ON CATALOG_RETURN;

DROP TABLE IF EXISTS CATALOG_RETURN;

DROP INDEX INDEX_CARET_H ON CATALOG_RETURN_H;

DROP TABLE IF EXISTS CATALOG_RETURN_H;

DROP INDEX INDEX_FIELD_CLREG ON CLEANOUT_REGULATION;

DROP TABLE IF EXISTS CLEANOUT_REGULATION;

DROP INDEX INDEX_FIELD_CLREG_H ON CLEANOUT_REGULATION_H;

DROP TABLE IF EXISTS CLEANOUT_REGULATION_H;

DROP INDEX INDEX_COTAG ON CONDITION_TAG;

DROP TABLE IF EXISTS CONDITION_TAG;

DROP INDEX INDEX_COTAG_H ON CONDITION_TAG_H;

DROP TABLE IF EXISTS CONDITION_TAG_H;

DROP INDEX INDEX_CONTA ON CONTACT;

DROP TABLE IF EXISTS CONTACT;

DROP INDEX INDEX_CONTA_H ON CONTACT_H;

DROP TABLE IF EXISTS CONTACT_H;

DROP INDEX INDEX_DATA ON DATA;

DROP TABLE IF EXISTS DATA;

DROP INDEX INDEX_DACON ON DATA_CONDITION;

DROP TABLE IF EXISTS DATA_CONDITION;

DROP INDEX INDEX_DACON_H ON DATA_CONDITION_H;

DROP TABLE IF EXISTS DATA_CONDITION_H;

DROP INDEX INDEX_FIELD_DAEXC ON DATA_EXCEPTION;

DROP TABLE IF EXISTS DATA_EXCEPTION;

DROP INDEX INDEX_DAEXC ON DATA_EXCHANGE;

DROP TABLE IF EXISTS DATA_EXCHANGE;

DROP INDEX INDEX_DAEXP ON DATA_EXPRESSION;

DROP TABLE IF EXISTS DATA_EXPRESSION;

DROP INDEX INDEX_DAEXP_H ON DATA_EXPRESSION_H;

DROP TABLE IF EXISTS DATA_EXPRESSION_H;

DROP INDEX INDEX_DAGRO ON DATA_GROUP;

DROP TABLE IF EXISTS DATA_GROUP;

DROP INDEX INDEX_DAGRO_H ON DATA_GROUP_H;

DROP TABLE IF EXISTS DATA_GROUP_H;

DROP INDEX INDEX_DATA_H ON DATA_H;

DROP TABLE IF EXISTS DATA_H;

DROP TABLE IF EXISTS DATA_HISTORY;

DROP INDEX INDEX_DATA_MAPPING ON DATA_MAPPING;

DROP TABLE IF EXISTS DATA_MAPPING;

DROP INDEX INDEX_DATA_MAPPING_H ON DATA_MAPPING_H;

DROP TABLE IF EXISTS DATA_MAPPING_H;

DROP INDEX INDEX_DAMET ON DATA_METADATA;

DROP TABLE IF EXISTS DATA_METADATA;

DROP INDEX INDEX_DAMET_H ON DATA_METADATA_H;

DROP TABLE IF EXISTS DATA_METADATA_H;

DROP INDEX INDEX_DAORD ON DATA_ORDER;

DROP TABLE IF EXISTS DATA_ORDER;

DROP INDEX INDEX_DAORD_H ON DATA_ORDER_H;

DROP TABLE IF EXISTS DATA_ORDER_H;

DROP INDEX INDEX_DAPARA ON DATA_PARAMETER;

DROP TABLE IF EXISTS DATA_PARAMETER;

DROP INDEX INDEX_DAPARA_H ON DATA_PARAMETER_H;

DROP TABLE IF EXISTS DATA_PARAMETER_H;

DROP INDEX INDEX_DASTA ON DATA_STATISTICS;

DROP TABLE IF EXISTS DATA_STATISTICS;

DROP INDEX INDEX_DAVAL ON DATA_VALUE;

DROP TABLE IF EXISTS DATA_VALUE;

DROP INDEX INDEX_DAVAL_H ON DATA_VALUE_H;

DROP TABLE IF EXISTS DATA_VALUE_H;

DROP INDEX INDEX_DAVARI ON DATA_VARIABLE;

DROP TABLE IF EXISTS DATA_VARIABLE;

DROP INDEX INDEX_DAVARI_H ON DATA_VARIABLE_H;

DROP TABLE IF EXISTS DATA_VARIABLE_H;

DROP INDEX INDEX_DESIGN_CATALOG ON DESIGN_CATALOG;

DROP TABLE IF EXISTS DESIGN_CATALOG;

DROP INDEX INDEX_EXRES ON EXCEPTION_RESPONSE;

DROP TABLE IF EXISTS EXCEPTION_RESPONSE;

DROP INDEX INDEX_EXRES_H ON EXCEPTION_RESPONSE_H;

DROP TABLE IF EXISTS EXCEPTION_RESPONSE_H;

DROP INDEX INDEX_EXDES ON EXCHANGE_DESIGN;

DROP TABLE IF EXISTS EXCHANGE_DESIGN;

DROP INDEX INDEX_EXDES_H ON EXCHANGE_DESIGN_H;

DROP TABLE IF EXISTS EXCHANGE_DESIGN_H;

DROP INDEX INDEX_EXPRO ON EXCHANGE_PROCESSOR;

DROP TABLE IF EXISTS EXCHANGE_PROCESSOR;

DROP INDEX INDEX_EXITE ON EXPRESSION_ITEM;

DROP TABLE IF EXISTS EXPRESSION_ITEM;

DROP INDEX INDEX_EXITE_H ON EXPRESSION_ITEM_H;

DROP TABLE IF EXISTS EXPRESSION_ITEM_H;

DROP INDEX INDEX_FIELD_FICLE ON FIELD_CLEANOUT;

DROP TABLE IF EXISTS FIELD_CLEANOUT;

DROP INDEX INDEX_FIELD_FICLE_H ON FIELD_CLEANOUT_H;

DROP TABLE IF EXISTS FIELD_CLEANOUT_H;

DROP INDEX INDEX_FIELD_LABEL ON FIELD_LABEL;

DROP TABLE IF EXISTS FIELD_LABEL;

DROP INDEX INDEX_FIELD_LABEL_H ON FIELD_LABEL_H;

DROP TABLE IF EXISTS FIELD_LABEL_H;

DROP INDEX INDEX_FIELD_FIVER ON FIELD_VERIFY;

DROP TABLE IF EXISTS FIELD_VERIFY;

DROP INDEX INDEX_FIELD_FIVER_H ON FIELD_VERIFY_H;

DROP TABLE IF EXISTS FIELD_VERIFY_H;

DROP INDEX INDEX_INFOINGE_JOB ON INFOINGE_JOB;

DROP TABLE IF EXISTS INFOINGE_JOB;

DROP INDEX INDEX_INFOINGE_JOB_H ON INFOINGE_JOB_H;

DROP TABLE IF EXISTS INFOINGE_JOB_H;

DROP INDEX INDEX_ITVAL ON ITEM_VALUE;

DROP TABLE IF EXISTS ITEM_VALUE;

DROP INDEX INDEX_ITVAL_H ON ITEM_VALUE_H;

DROP TABLE IF EXISTS ITEM_VALUE_H;

DROP INDEX INDEX_JOB_CATALOG ON JOB_CATALOG;

DROP TABLE IF EXISTS JOB_CATALOG;

DROP INDEX INDEX_JOB_CATALOG_H ON JOB_CATALOG_H;

DROP TABLE IF EXISTS JOB_CATALOG_H;

DROP INDEX INDEX_JOB_JOURNAL ON JOB_JOURNAL;

DROP TABLE IF EXISTS JOB_JOURNAL;

DROP INDEX INDEX_LANGUAGE ON LANGUAGE;

DROP TABLE IF EXISTS LANGUAGE;

DROP INDEX INDEX_LANGUAGE_H ON LANGUAGE_H;

DROP TABLE IF EXISTS LANGUAGE_H;

DROP INDEX INDEX_LOACC ON LOGON_ACCOUNT;

DROP TABLE IF EXISTS LOGON_ACCOUNT;

DROP INDEX INDEX_LOACC_H ON LOGON_ACCOUNT_H;

DROP TABLE IF EXISTS LOGON_ACCOUNT_H;

DROP INDEX INDEX_PECON ON PERMISSION_CONTROL;

DROP TABLE IF EXISTS PERMISSION_CONTROL;

DROP INDEX INDEX_PREFIX_CODE ON PREFIX_CODE;

DROP TABLE IF EXISTS PREFIX_CODE;

DROP INDEX INDEX_PREFIX_CODE_H ON PREFIX_CODE_H;

DROP TABLE IF EXISTS PREFIX_CODE_H;

DROP INDEX INDEX_PROCESSOR ON PROCESSOR;

DROP TABLE IF EXISTS PROCESSOR;

DROP INDEX INDEX_PROCESSOR_H ON PROCESSOR_H;

DROP TABLE IF EXISTS PROCESSOR_H;

DROP INDEX INDEX_QUOTE ON QUOTE;

DROP TABLE IF EXISTS QUOTE;

DROP INDEX INDEX_QUOTE_H ON QUOTE_H;

DROP TABLE IF EXISTS QUOTE_H;

DROP INDEX INDEX_RHO ON RELEASE_HOST;

DROP TABLE IF EXISTS RELEASE_HOST;

DROP INDEX INDEX_RHO_H ON RELEASE_HOST_H;

DROP TABLE IF EXISTS RELEASE_HOST_H;

DROP INDEX INDEX_REPLACE_HOST ON REPLACE_HOST;

DROP TABLE IF EXISTS REPLACE_HOST;

DROP INDEX INDEX_CONNECTOR ON RESOURCE_CONNECTION;

DROP TABLE IF EXISTS RESOURCE_CONNECTION;

DROP INDEX INDEX_CONNECTOR_H ON RESOURCE_CONNECTION_H;

DROP TABLE IF EXISTS RESOURCE_CONNECTION_H;

DROP INDEX INDEX_RESOURCE ON RESOURCE_DECOMPOSING;

DROP TABLE IF EXISTS RESOURCE_DECOMPOSING;

DROP INDEX INDEX_RESOURCE_H ON RESOURCE_DECOMPOSING_H;

DROP TABLE IF EXISTS RESOURCE_DECOMPOSING_H;

DROP INDEX INDEX_RESOURCE_DEFINITION ON RESOURCE_DEFINITION;

DROP TABLE IF EXISTS RESOURCE_DEFINITION;

DROP INDEX INDEX_RESOURCE_DEFINITION_H ON RESOURCE_DEFINITION_H;

DROP TABLE IF EXISTS RESOURCE_DEFINITION_H;

DROP INDEX INDEX_RESOURCE_LABEL ON RESOURCE_LABEL;

DROP TABLE IF EXISTS RESOURCE_LABEL;

DROP INDEX INDEX_RESOURCE_LABEL_H ON RESOURCE_LABEL_H;

DROP TABLE IF EXISTS RESOURCE_LABEL_H;

DROP INDEX INDEX_RESOURCE_RELEVANCE ON RESOURCE_RELEVANCE;

DROP TABLE IF EXISTS RESOURCE_RELEVANCE;

DROP INDEX INDEX_RESOURCE_RELEVANCE_H ON RESOURCE_RELEVANCE_H;

DROP TABLE IF EXISTS RESOURCE_RELEVANCE_H;

DROP INDEX INDEX_REITE ON RESPONSE_ITEM;

DROP TABLE IF EXISTS RESPONSE_ITEM;

DROP INDEX INDEX_REITE_H ON RESPONSE_ITEM_H;

DROP TABLE IF EXISTS RESPONSE_ITEM_H;

DROP INDEX INDEX_STYLE ON STYLE;

DROP TABLE IF EXISTS STYLE;

DROP INDEX INDEX_STYLE_H ON STYLE_H;

DROP TABLE IF EXISTS STYLE_H;

DROP TABLE IF EXISTS SYNERGY;

DROP INDEX INDEX_TAITE ON TAG_ITEM;

DROP TABLE IF EXISTS TAG_ITEM;

DROP INDEX INDEX_TAITE_H ON TAG_ITEM_H;

DROP TABLE IF EXISTS TAG_ITEM_H;

DROP TABLE IF EXISTS TOPOLOGY;

DROP INDEX INDEX_THO ON TRUSTING_HOST;

DROP TABLE IF EXISTS TRUSTING_HOST;

DROP INDEX INDEX_THO_H ON TRUSTING_HOST_H;

DROP TABLE IF EXISTS TRUSTING_HOST_H;

DROP INDEX INDEX_VATAG ON VALUE_TAG;

DROP TABLE IF EXISTS VALUE_TAG;

DROP INDEX INDEX_VATAG_H ON VALUE_TAG_H;

DROP TABLE IF EXISTS VALUE_TAG_H;

DROP INDEX INDEX_FIELD_VECLE ON VERIFY_CLEANOUT;

DROP TABLE IF EXISTS VERIFY_CLEANOUT;

DROP INDEX INDEX_FIELD_VECLE_H ON VERIFY_CLEANOUT_H;

DROP TABLE IF EXISTS VERIFY_CLEANOUT_H;

DROP INDEX INDEX_FIELD_VEREG ON VERIFY_REGULATION;

DROP TABLE IF EXISTS VERIFY_REGULATION;

DROP INDEX INDEX_FIELD_VEREG_H ON VERIFY_REGULATION_H;

DROP TABLE IF EXISTS VERIFY_REGULATION_H;

DROP INDEX INDEX_VOCABULARY ON VOCABULARY;

DROP TABLE IF EXISTS VOCABULARY;

DROP INDEX INDEX_VOCABULARY_H ON VOCABULARY_H;

DROP TABLE IF EXISTS VOCABULARY_H;

/*==============================================================*/
/* Table: BUDDLE                                                */
/*==============================================================*/
CREATE TABLE BUDDLE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '插件编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   IS_SYNCED_ACTIVE     VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '插件标识',
   NAME                 VARCHAR(128) COMMENT '插件名字',
   IS_PERMIT            VARCHAR(8) COMMENT '是否判断权限',
   IS_HOME              VARCHAR(8) COMMENT '是否入口插件',
   IS_UPDATING          VARCHAR(8) COMMENT '是否升级',
   TITLE                VARCHAR(128),
   VALIDATOR            VARCHAR(128),
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   IS_RUNNING           VARCHAR(8),
   TIMING_YEAR          VARCHAR(128) COMMENT '定时年',
   TIMING_MONTH         VARCHAR(32) COMMENT '定时年',
   TIMING_DAY           VARCHAR(128),
   TIMING_HOUR          VARCHAR(64),
   TIMING_MINUTE        VARCHAR(180),
   IS_SYNCED_DSB        VARCHAR(8) COMMENT '是否已同步总线',
   SYNC_DSB_REASON      VARCHAR(16) COMMENT '同步总线原因',
   SYNC_ACTIVE_STATUS   VARCHAR(24) COMMENT '同步状态',
   SYNC_STATUS          VARCHAR(24) COMMENT '同步状态',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (IDENTIFIER)
);

/*==============================================================*/
/* Index: INDEX_BUDDLE                                          */
/*==============================================================*/
CREATE INDEX INDEX_BUDDLE ON BUDDLE
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: BUDDLE_H                                              */
/*==============================================================*/
CREATE TABLE BUDDLE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '插件编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   IS_SYNCED_ACTIVE     VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '插件标识',
   NAME                 VARCHAR(128) COMMENT '插件名字',
   IS_PERMIT            VARCHAR(8) COMMENT '是否判断权限',
   IS_HOME              VARCHAR(8) COMMENT '是否入口插件',
   IS_UPDATING          VARCHAR(8) COMMENT '是否升级',
   TITLE                VARCHAR(128),
   VALIDATOR            VARCHAR(128),
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   IS_RUNNING           VARCHAR(8),
   TIMING_YEAR          VARCHAR(128) COMMENT '定时年',
   TIMING_MONTH         VARCHAR(32) COMMENT '定时年',
   TIMING_DAY           VARCHAR(128),
   TIMING_HOUR          VARCHAR(64),
   TIMING_MINUTE        VARCHAR(180),
   IS_SYNCED_DSB        VARCHAR(8) COMMENT '是否已同步总线',
   SYNC_DSB_REASON      VARCHAR(16) COMMENT '同步总线原因',
   SYNC_ACTIVE_STATUS   VARCHAR(24) COMMENT '同步状态',
   SYNC_STATUS          VARCHAR(24) COMMENT '同步状态',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_BUDDLE_H                                        */
/*==============================================================*/
CREATE INDEX INDEX_BUDDLE_H ON BUDDLE_H
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: BUDDLE_ISSUE                                          */
/*==============================================================*/
CREATE TABLE BUDDLE_ISSUE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '目录编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CONNECTION_ID        VARCHAR(128) COMMENT '连接标识',
   LAST_ISSUE           TIMESTAMP,
   IS_RUNNING           VARCHAR(8),
   FREQUENTNESS         VARCHAR(8) COMMENT 'year|年，month|月，day|天，hour|时，minute|分，second|秒',
   INTERVAL_TIME        INT COMMENT '是否入口插件',
   JOIN_TIME            DATETIME,
   RUN_START_HOUR       VARCHAR(8) COMMENT '是否升级',
   RUN_START_MINUTE     VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_HOUR      VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_MINUTE    VARCHAR(8) COMMENT '是否升级',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (BUDDLE_ID)
);

/*==============================================================*/
/* Index: INDEX_BUD_ISSUE                                       */
/*==============================================================*/
CREATE INDEX INDEX_BUD_ISSUE ON BUDDLE_ISSUE
(
   BUDDLE_ID,
   RUN_START_HOUR,
   RUN_START_MINUTE
);

/*==============================================================*/
/* Table: BUDDLE_ISSUE_H                                        */
/*==============================================================*/
CREATE TABLE BUDDLE_ISSUE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '目录编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CONNECTION_ID        VARCHAR(128) COMMENT '连接标识',
   LAST_ISSUE           TIMESTAMP,
   IS_RUNNING           VARCHAR(8),
   FREQUENTNESS         VARCHAR(8) COMMENT 'year|年，month|月，day|天，hour|时，minute|分，second|秒',
   INTERVAL_TIME        INT COMMENT '是否入口插件',
   JOIN_TIME            DATETIME,
   RUN_START_HOUR       VARCHAR(8) COMMENT '是否升级',
   RUN_START_MINUTE     VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_HOUR      VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_MINUTE    VARCHAR(8) COMMENT '是否升级',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2_BUDDLE_I_H (BUDDLE_ID)
);

/*==============================================================*/
/* Index: INDEX_BUD_ISSUE_H                                     */
/*==============================================================*/
CREATE INDEX INDEX_BUD_ISSUE_H ON BUDDLE_ISSUE_H
(
   BUDDLE_ID,
   RUN_START_HOUR,
   RUN_START_MINUTE
);

/*==============================================================*/
/* Table: CAPTCHA                                               */
/*==============================================================*/
CREATE TABLE CAPTCHA
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '插件编码',
   VALIDATE_CODE        VARCHAR(128),
   SAVE_PATH            VARCHAR(128) COMMENT '描述',
   EFFECTIVE_DATE       DATETIME COMMENT '插件名字',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Table: CATALOG                                               */
/*==============================================================*/
CREATE TABLE CATALOG
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '目录编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   IS_SYNCED_ACTIVE     VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   IDENTIFIER           VARCHAR(64) COMMENT '目录标识',
   NAME                 VARCHAR(128) COMMENT '目录名字',
   TYPE                 VARCHAR(16) COMMENT '目录类型：function[功能接口]、upgrade[升级方案]、transfer[迁移方案]',
   CONTENT_TYPE         VARCHAR(32) COMMENT 'MIME类型',
   IS_PERMIT            VARCHAR(8) COMMENT '是否判断权限',
   IS_HOME              VARCHAR(8) COMMENT '是否应用入口',
   IS_PAUSE             VARCHAR(8) COMMENT '是否暂停',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CLASS                VARCHAR(256) COMMENT '处理类',
   IS_RUNNING           VARCHAR(8),
   FREQUENTNESS         VARCHAR(8) COMMENT 'year|年，month|月，day|天，hour|时，minute|分，second|秒',
   INTERVAL_TIME        INT COMMENT '是否入口插件',
   JOIN_TIME            DATETIME,
   RUN_START_HOUR       VARCHAR(8) COMMENT '是否升级',
   RUN_START_MINUTE     VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_HOUR      VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_MINUTE    VARCHAR(8) COMMENT '是否升级',
   TIMING_YEAR          VARCHAR(128) COMMENT '定时年',
   TIMING_MONTH         VARCHAR(32) COMMENT '定时年',
   TIMING_DAY           VARCHAR(128),
   TIMING_HOUR          VARCHAR(64),
   TIMING_MINUTE        VARCHAR(180),
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   IS_SYNCED_DSB        VARCHAR(8) COMMENT '是否已同步总线',
   IS_ISSUE_DSB         VARCHAR(8) COMMENT '是否发布总线',
   IS_LOG               VARCHAR(8) COMMENT '是否已同步总线',
   SYNC_DSB_REASON      VARCHAR(16) COMMENT '同步总线原因',
   SYNC_ACTIVE_STATUS   VARCHAR(24) COMMENT '同步状态',
   SYNC_STATUS          VARCHAR(24) COMMENT '同步状态',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (BUDDLE_ID, IDENTIFIER)
);

/*==============================================================*/
/* Index: INDEX_CATALOG                                         */
/*==============================================================*/
CREATE INDEX INDEX_CATALOG ON CATALOG
(
   BUDDLE_ID,
   IDENTIFIER
);

/*==============================================================*/
/* Table: CATALOG_COMMENT                                       */
/*==============================================================*/
CREATE TABLE CATALOG_COMMENT
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '数据编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   COMMENT_TIME         DATETIME,
   CONTENT              TEXT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CATALOG_COMMENT                                 */
/*==============================================================*/
CREATE INDEX INDEX_CATALOG_COMMENT ON CATALOG_COMMENT
(
   COMMENT_TIME
);

/*==============================================================*/
/* Table: CATALOG_H                                             */
/*==============================================================*/
CREATE TABLE CATALOG_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '目录编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   IS_SYNCED_ACTIVE     VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   IDENTIFIER           VARCHAR(64) COMMENT '目录标识',
   NAME                 VARCHAR(128) COMMENT '目录名字',
   TYPE                 VARCHAR(16) COMMENT '目录类型：function[功能接口]、upgrade[升级方案]、transfer[迁移方案]',
   CONTENT_TYPE         VARCHAR(32) COMMENT 'MIME类型',
   IS_PERMIT            VARCHAR(8) COMMENT '是否判断权限',
   IS_HOME              VARCHAR(8) COMMENT '是否应用入口',
   IS_PAUSE             VARCHAR(8) COMMENT '是否暂停',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CLASS                VARCHAR(256) COMMENT '处理类',
   IS_RUNNING           VARCHAR(8),
   FREQUENTNESS         VARCHAR(8) COMMENT 'year|年，month|月，day|天，hour|时，minute|分，second|秒',
   INTERVAL_TIME        INT COMMENT '是否入口插件',
   JOIN_TIME            DATETIME,
   RUN_START_HOUR       VARCHAR(8) COMMENT '是否升级',
   RUN_START_MINUTE     VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_HOUR      VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_MINUTE    VARCHAR(8) COMMENT '是否升级',
   TIMING_YEAR          VARCHAR(128) COMMENT '定时年',
   TIMING_MONTH         VARCHAR(32) COMMENT '定时年',
   TIMING_DAY           VARCHAR(128),
   TIMING_HOUR          VARCHAR(64),
   TIMING_MINUTE        VARCHAR(180),
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   IS_SYNCED_DSB        VARCHAR(8) COMMENT '是否已同步总线',
   IS_ISSUE_DSB         VARCHAR(8) COMMENT '是否发布总线',
   IS_LOG               VARCHAR(8) COMMENT '是否已同步总线',
   SYNC_DSB_REASON      VARCHAR(16) COMMENT '同步总线原因',
   SYNC_ACTIVE_STATUS   VARCHAR(24) COMMENT '同步状态',
   SYNC_STATUS          VARCHAR(24) COMMENT '同步状态',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CATALOG_H                                       */
/*==============================================================*/
CREATE INDEX INDEX_CATALOG_H ON CATALOG_H
(
   BUDDLE_ID,
   IDENTIFIER
);

/*==============================================================*/
/* Table: CATALOG_PARAMETER                                     */
/*==============================================================*/
CREATE TABLE CATALOG_PARAMETER
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录标识',
   DATA_POSITION        INT,
   DATA_CODE            VARCHAR(24),
   DATA_NAME            VARCHAR(128),
   DATA_TYPE            VARCHAR(16),
   IS_PARAMETER         VARCHAR(8) COMMENT '处理类',
   IS_MUST              VARCHAR(8) COMMENT '处理类',
   PARAMETER_NAME       VARCHAR(128) COMMENT '样式单中的变量定义',
   PARAMETER_TYPE       VARCHAR(16),
   PARAMETER_LENGTH     INT,
   CONNECTION_ID        VARCHAR(128) COMMENT '连接标识',
   RESOURCE_BUDDLE      VARCHAR(64) COMMENT '查询语句',
   RESOURCE_NAME        VARCHAR(128) COMMENT '操作对象',
   RELATED_FIELD        VARCHAR(128),
   REQUIREMENT          TEXT COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CAPAR                                           */
/*==============================================================*/
CREATE INDEX INDEX_CAPAR ON CATALOG_PARAMETER
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_POSITION,
   PARAMETER_NAME
);

/*==============================================================*/
/* Table: CATALOG_PARAMETER_H                                   */
/*==============================================================*/
CREATE TABLE CATALOG_PARAMETER_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录标识',
   DATA_POSITION        INT,
   DATA_CODE            VARCHAR(24),
   DATA_NAME            VARCHAR(128),
   DATA_TYPE            VARCHAR(16),
   IS_PARAMETER         VARCHAR(8) COMMENT '处理类',
   IS_MUST              VARCHAR(8) COMMENT '处理类',
   PARAMETER_NAME       VARCHAR(128) COMMENT '样式单中的变量定义',
   PARAMETER_TYPE       VARCHAR(16),
   PARAMETER_LENGTH     INT,
   CONNECTION_ID        VARCHAR(128) COMMENT '连接标识',
   RESOURCE_BUDDLE      VARCHAR(64) COMMENT '查询语句',
   RESOURCE_NAME        VARCHAR(128) COMMENT '操作对象',
   RELATED_FIELD        VARCHAR(128),
   REQUIREMENT          TEXT COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CAPAR_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_CAPAR_H ON CATALOG_PARAMETER_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_POSITION,
   PARAMETER_NAME
);

/*==============================================================*/
/* Table: CATALOG_RESPONSE                                      */
/*==============================================================*/
CREATE TABLE CATALOG_RESPONSE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   RESPONSE_FORMAT      VARCHAR(8) COMMENT 'xml、json、text',
   START_SYMBOL         VARCHAR(64),
   END_SYMBOL           VARCHAR(64),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CARES                                           */
/*==============================================================*/
CREATE INDEX INDEX_CARES ON CATALOG_RESPONSE
(
   BUDDLE_ID,
   CATALOG_ID,
   POSITION
);

/*==============================================================*/
/* Table: CATALOG_RESPONSE_H                                    */
/*==============================================================*/
CREATE TABLE CATALOG_RESPONSE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   RESPONSE_FORMAT      VARCHAR(8) COMMENT 'xml、json、text',
   START_SYMBOL         VARCHAR(64),
   END_SYMBOL           VARCHAR(64),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CARES_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_CARES_H ON CATALOG_RESPONSE_H
(
   BUDDLE_ID,
   CATALOG_ID,
   POSITION
);

/*==============================================================*/
/* Table: CATALOG_RETURN                                        */
/*==============================================================*/
CREATE TABLE CATALOG_RETURN
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录标识',
   CONTENT              TEXT,
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CARET                                           */
/*==============================================================*/
CREATE INDEX INDEX_CARET ON CATALOG_RETURN
(
   BUDDLE_ID,
   CATALOG_ID
);

/*==============================================================*/
/* Table: CATALOG_RETURN_H                                      */
/*==============================================================*/
CREATE TABLE CATALOG_RETURN_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录标识',
   CONTENT              TEXT,
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CARET_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_CARET_H ON CATALOG_RETURN_H
(
   BUDDLE_ID,
   CATALOG_ID
);

/*==============================================================*/
/* Table: CLEANOUT_REGULATION                                   */
/*==============================================================*/
CREATE TABLE CLEANOUT_REGULATION
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   REGULATION_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   CLASS                VARCHAR(256) COMMENT '处理类',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_CLREG                                     */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_CLREG ON CLEANOUT_REGULATION
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: CLEANOUT_REGULATION_H                                 */
/*==============================================================*/
CREATE TABLE CLEANOUT_REGULATION_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   REGULATION_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   CLASS                VARCHAR(256) COMMENT '处理类',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_CLREG_H                                   */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_CLREG_H ON CLEANOUT_REGULATION_H
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: CONDITION_TAG                                         */
/*==============================================================*/
CREATE TABLE CONDITION_TAG
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   CONDITION_CODE       VARCHAR(24),
   POSITION             INT,
   TAG_NAME             VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_COTAG                                           */
/*==============================================================*/
CREATE INDEX INDEX_COTAG ON CONDITION_TAG
(
   BUDDLE_ID,
   CATALOG_ID,
   CONDITION_CODE,
   POSITION
);

/*==============================================================*/
/* Table: CONDITION_TAG_H                                       */
/*==============================================================*/
CREATE TABLE CONDITION_TAG_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   CONDITION_CODE       VARCHAR(24),
   POSITION             INT,
   TAG_NAME             VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_COTAG_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_COTAG_H ON CONDITION_TAG_H
(
   BUDDLE_ID,
   CATALOG_ID,
   CONDITION_CODE,
   POSITION
);

/*==============================================================*/
/* Table: CONTACT                                               */
/*==============================================================*/
CREATE TABLE CONTACT
(
   CODE                 VARCHAR(24) NOT NULL,
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   OWNER_TYPE           VARCHAR(16) COMMENT 'organization:单位,person:个人',
   OWNER_CODE           VARCHAR(256),
   TYPE                 VARCHAR(16) COMMENT 'linkman:联系人,address:地址,email:电子邮箱,tele:座机号码,mobil:移动电话,fax:传真,web:网站',
   COUNTRY_NAME         VARCHAR(64),
   PROVINCE_NAME        VARCHAR(64),
   CITY_NAME            VARCHAR(64),
   COUNTY_NAME          VARCHAR(64),
   POSTCODE             VARCHAR(16),
   CONTENT              VARCHAR(256),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CONTA                                           */
/*==============================================================*/
CREATE INDEX INDEX_CONTA ON CONTACT
(
   OWNER_TYPE,
   TYPE
);

/*==============================================================*/
/* Table: CONTACT_H                                             */
/*==============================================================*/
CREATE TABLE CONTACT_H
(
   CODE                 VARCHAR(24) NOT NULL,
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   OWNER_TYPE           VARCHAR(16) COMMENT 'organization:单位,person:个人',
   OWNER_CODE           VARCHAR(256),
   TYPE                 VARCHAR(16) COMMENT 'address:地址,email:电子邮箱,tele:座机号码,mobil:移动电话,fax:传真,web:网站',
   COUNTRY_NAME         VARCHAR(64),
   PROVINCE_NAME        VARCHAR(64),
   CITY_NAME            VARCHAR(64),
   COUNTY_NAME          VARCHAR(64),
   POSTCODE             VARCHAR(16),
   CONTENT              VARCHAR(256),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CONTA_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_CONTA_H ON CONTACT_H
(
   OWNER_TYPE,
   TYPE
);

/*==============================================================*/
/* Table: DATA                                                  */
/*==============================================================*/
CREATE TABLE DATA
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '数据编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   IS_SYNCED_ACTIVE     VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   NAME                 VARCHAR(128) COMMENT '数据名字',
   TYPE                 VARCHAR(16) COMMENT '数据类型：DB[数据库]，Hinge[枢纽]，WS[其他服务]，XML[XML存储]',
   CONNECTION_ID        VARCHAR(128) COMMENT '连接标识',
   RESOURCE_NAME        VARCHAR(128) COMMENT '操作对象',
   OPERATION            VARCHAR(16) COMMENT '操作名字',
   IS_PAGINATE          VARCHAR(8) COMMENT '是否分页',
   POSITION             INT COMMENT '处理顺序',
   IS_PERMIT            VARCHAR(8) COMMENT '是否判断权限',
   IS_FULL              VARCHAR(8) COMMENT '是否全取数据',
   ROW_NUMBER           NUMERIC(8,0),
   UNIQUES              VARCHAR(128) COMMENT '唯一描述',
   IS_DESCEND           VARCHAR(8),
   RESOURCE_BUDDLE      VARCHAR(64) COMMENT '查询语句',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASSIFY             VARCHAR(32),
   DATA_METHOD          VARCHAR(128),
   IS_SYNCED_DSB        VARCHAR(8) COMMENT '是否已同步总线',
   SYNC_DSB_REASON      VARCHAR(16) COMMENT '同步总线原因',
   SYNC_ACTIVE_STATUS   VARCHAR(24) COMMENT '同步状态',
   SYNC_STATUS          VARCHAR(24) COMMENT '同步状态',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (BUDDLE_ID, CATALOG_ID, RESOURCE_NAME, OPERATION, POSITION)
);

/*==============================================================*/
/* Index: INDEX_DATA                                            */
/*==============================================================*/
CREATE INDEX INDEX_DATA ON DATA
(
   BUDDLE_ID,
   CATALOG_ID,
   POSITION
);

/*==============================================================*/
/* Table: DATA_CONDITION                                        */
/*==============================================================*/
CREATE TABLE DATA_CONDITION
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DACON                                           */
/*==============================================================*/
CREATE INDEX INDEX_DACON ON DATA_CONDITION
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_CONDITION_H                                      */
/*==============================================================*/
CREATE TABLE DATA_CONDITION_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024),
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DACON_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_DACON_H ON DATA_CONDITION_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_EXCEPTION                                        */
/*==============================================================*/
CREATE TABLE DATA_EXCEPTION
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '交换编码',
   CONNECTION_ID        VARCHAR(24) COMMENT '数据编码',
   RESOURCE_NAME        VARCHAR(128),
   EXCEPTION_FIELD      VARCHAR(128) COMMENT '操作名字',
   EXCEPTION_CONTENT    VARCHAR(256) COMMENT '迁移字段',
   VERIFY_CODE          VARCHAR(24) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   PRIMARY_FIELD        VARCHAR(256),
   PRIMARY_VALUE        VARCHAR(256),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_DAEXC                                     */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_DAEXC ON DATA_EXCEPTION
(
   CONNECTION_ID,
   RESOURCE_NAME,
   EXCEPTION_FIELD
);

/*==============================================================*/
/* Table: DATA_EXCHANGE                                         */
/*==============================================================*/
CREATE TABLE DATA_EXCHANGE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '交换编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24) COMMENT '数据编码',
   OPERATION            VARCHAR(16) COMMENT '操作名字',
   DATA_NAME            VARCHAR(128) COMMENT '数据编码',
   PROCESSOR_NUMBER     VARCHAR(8),
   IS_FULL              VARCHAR(8) COMMENT '是否使用',
   CLEAN_EXPRESSION     VARCHAR(256),
   MIGR_POSITION        VARCHAR(128) COMMENT '迁移位置',
   MIGR_FIELD           VARCHAR(128) COMMENT '迁移字段',
   MIGR_FIELD_TYPE      VARCHAR(8),
   SYNC_POSITION        VARCHAR(128) COMMENT '同步位置',
   SYNC_FIELD           VARCHAR(128) COMMENT '同步字段',
   SYNC_FIELD_TYPE      VARCHAR(8),
   SYNC_TIME_POSITION   VARCHAR(32) COMMENT '同步时间位置',
   SYNC_TIME_FIELD      VARCHAR(128) COMMENT '同步时间字段',
   SYNC_TIME_FIELD_TYPE VARCHAR(8),
   FLAG_FIELD           VARCHAR(128),
   FLAG_FIELD_TYPE      VARCHAR(8),
   FLAG_CHANGE          VARCHAR(32),
   FLAG_RESET           VARCHAR(32),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAEXC                                           */
/*==============================================================*/
CREATE INDEX INDEX_DAEXC ON DATA_EXCHANGE
(
   DATA_CODE
);

/*==============================================================*/
/* Table: DATA_EXPRESSION                                       */
/*==============================================================*/
CREATE TABLE DATA_EXPRESSION
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAEXP                                           */
/*==============================================================*/
CREATE INDEX INDEX_DAEXP ON DATA_EXPRESSION
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_EXPRESSION_H                                     */
/*==============================================================*/
CREATE TABLE DATA_EXPRESSION_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024),
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAEXP_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_DAEXP_H ON DATA_EXPRESSION_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_GROUP                                            */
/*==============================================================*/
CREATE TABLE DATA_GROUP
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   FIELD_NAME           VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAGRO                                           */
/*==============================================================*/
CREATE INDEX INDEX_DAGRO ON DATA_GROUP
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_GROUP_H                                          */
/*==============================================================*/
CREATE TABLE DATA_GROUP_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   FIELD_NAME           VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAGRO_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_DAGRO_H ON DATA_GROUP_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_H                                                */
/*==============================================================*/
CREATE TABLE DATA_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '数据编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   IS_SYNCED_ACTIVE     VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   NAME                 VARCHAR(128) COMMENT '数据名字',
   TYPE                 VARCHAR(16) COMMENT '数据类型：DB[数据库]，Hinge[枢纽]，WS[其他服务]，XML[XML存储]',
   CONNECTION_ID        VARCHAR(128) COMMENT '连接标识',
   RESOURCE_NAME        VARCHAR(128) COMMENT '操作对象',
   OPERATION            VARCHAR(16) COMMENT '操作名字',
   IS_PAGINATE          VARCHAR(8) COMMENT '是否分页',
   POSITION             INT COMMENT '处理顺序',
   IS_PERMIT            VARCHAR(8) COMMENT '是否判断权限',
   IS_FULL              VARCHAR(8) COMMENT '是否全取数据',
   ROW_NUMBER           NUMERIC(8,0),
   UNIQUES              VARCHAR(128) COMMENT '唯一描述',
   IS_DESCEND           VARCHAR(8),
   RESOURCE_BUDDLE      VARCHAR(1024) COMMENT '查询语句',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASSIFY             VARCHAR(32),
   DATA_METHOD          VARCHAR(128),
   IS_SYNCED_DSB        VARCHAR(8) COMMENT '是否已同步总线',
   SYNC_DSB_REASON      VARCHAR(16) COMMENT '同步总线原因',
   SYNC_ACTIVE_STATUS   VARCHAR(24) COMMENT '同步状态',
   SYNC_STATUS          VARCHAR(24) COMMENT '同步状态',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DATA_H                                          */
/*==============================================================*/
CREATE INDEX INDEX_DATA_H ON DATA_H
(
   BUDDLE_ID,
   CATALOG_ID,
   POSITION
);

/*==============================================================*/
/* Table: DATA_HISTORY                                          */
/*==============================================================*/
CREATE TABLE DATA_HISTORY
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '交换编码',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   CONNECTION_ID        VARCHAR(24) COMMENT '数据编码',
   RESOURCE_NAME        VARCHAR(128),
   OPERATION            VARCHAR(128) COMMENT '操作名字',
   EXCHANGE_FIELD       VARCHAR(128) COMMENT '迁移字段',
   EXCHANGE_FIELD_VALUE VARCHAR(128) COMMENT '迁移字段',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Table: DATA_MAPPING                                          */
/*==============================================================*/
CREATE TABLE DATA_MAPPING
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   VALUE_CODE           VARCHAR(24),
   S_DATA_CODE          VARCHAR(24),
   IS_MAIN              VARCHAR(8),
   POSITION             INT COMMENT '处理顺序',
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   S_IDENTIFIER         VARCHAR(64),
   S_RESOURCE_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   S_RESOURCE_DIAPLAY   VARCHAR(128),
   S_FIELD              VARCHAR(128),
   R_DATA_CODE          VARCHAR(24),
   R_IDENTIFIER         VARCHAR(64),
   R_RESOURCE_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   R_RESOURCE_DIAPLAY   VARCHAR(128),
   R_FIELD              VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DATA_MAPPING                                    */
/*==============================================================*/
CREATE INDEX INDEX_DATA_MAPPING ON DATA_MAPPING
(
   VALUE_CODE,
   R_DATA_CODE,
   R_IDENTIFIER,
   R_RESOURCE_NAME,
   R_FIELD
);

/*==============================================================*/
/* Table: DATA_MAPPING_H                                        */
/*==============================================================*/
CREATE TABLE DATA_MAPPING_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   VALUE_CODE           VARCHAR(24),
   S_DATA_CODE          VARCHAR(24),
   IS_MAIN              VARCHAR(8),
   POSITION             INT COMMENT '处理顺序',
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   S_IDENTIFIER         VARCHAR(64),
   S_RESOURCE_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   S_RESOURCE_DIAPLAY   VARCHAR(128),
   S_FIELD              VARCHAR(128),
   R_DATA_CODE          VARCHAR(24),
   R_IDENTIFIER         VARCHAR(64),
   R_RESOURCE_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   R_RESOURCE_DIAPLAY   VARCHAR(128),
   R_FIELD              VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DATA_MAPPING_H                                  */
/*==============================================================*/
CREATE INDEX INDEX_DATA_MAPPING_H ON DATA_MAPPING_H
(
   VALUE_CODE,
   R_DATA_CODE,
   R_IDENTIFIER,
   R_RESOURCE_NAME,
   R_FIELD
);

/*==============================================================*/
/* Table: DATA_METADATA                                         */
/*==============================================================*/
CREATE TABLE DATA_METADATA
(
   CODE                 VARCHAR(24) NOT NULL,
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   DATA_ID              VARCHAR(128),
   NAME                 VARCHAR(128),
   REMARK               VARCHAR(128),
   TYPE                 VARCHAR(24),
   DISPLAY              VARCHAR(128),
   LENGTH               INT,
   PRIMARY_NAME         VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAMET                                           */
/*==============================================================*/
CREATE INDEX INDEX_DAMET ON DATA_METADATA
(
   DATA_ID,
   NAME
);

/*==============================================================*/
/* Table: DATA_METADATA_H                                       */
/*==============================================================*/
CREATE TABLE DATA_METADATA_H
(
   CODE                 VARCHAR(24) NOT NULL,
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   DATA_ID              VARCHAR(128),
   NAME                 VARCHAR(128),
   REMARK               VARCHAR(128),
   TYPE                 VARCHAR(24),
   DISPLAY              VARCHAR(128),
   LENGTH               INT,
   PRIMARY_NAME         VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAMET_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_DAMET_H ON DATA_METADATA_H
(
   DATA_ID,
   NAME
);

/*==============================================================*/
/* Table: DATA_ORDER                                            */
/*==============================================================*/
CREATE TABLE DATA_ORDER
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   FIELD_NAME           VARCHAR(1024),
   IS_DESCEND           VARCHAR(8),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAORD                                           */
/*==============================================================*/
CREATE INDEX INDEX_DAORD ON DATA_ORDER
(
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_ORDER_H                                          */
/*==============================================================*/
CREATE TABLE DATA_ORDER_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   FIELD_NAME           VARCHAR(1024),
   IS_DESCEND           VARCHAR(8),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAORD_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_DAORD_H ON DATA_ORDER_H
(
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_PARAMETER                                        */
/*==============================================================*/
CREATE TABLE DATA_PARAMETER
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   PARAMETER_NAME       VARCHAR(128) COMMENT '样式单中的变量定义',
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASS                VARCHAR(256) COMMENT '处理类',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAPARA                                          */
/*==============================================================*/
CREATE INDEX INDEX_DAPARA ON DATA_PARAMETER
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_PARAMETER_H                                      */
/*==============================================================*/
CREATE TABLE DATA_PARAMETER_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   PARAMETER_NAME       VARCHAR(128) COMMENT '样式单中的变量定义',
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASS                VARCHAR(256) COMMENT '处理类',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAPARA_H                                        */
/*==============================================================*/
CREATE INDEX INDEX_DAPARA_H ON DATA_PARAMETER_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_STATISTICS                                       */
/*==============================================================*/
CREATE TABLE DATA_STATISTICS
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   RECORD_YEAR          INT,
   RECORD_MONTH         INT,
   RECORD_DAY           INT,
   JOURNAL_TYPE         INT COMMENT '1：功能，2：迁移，3：同步',
   BUDDLE_ID            VARCHAR(64),
   BUDDLE_NAME          VARCHAR(128),
   CATALOG_ID           VARCHAR(64),
   CATALOG_NAME         VARCHAR(128),
   EFFECT_NUMBER        INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DASTA                                           */
/*==============================================================*/
CREATE INDEX INDEX_DASTA ON DATA_STATISTICS
(
   RECORD_YEAR,
   RECORD_MONTH,
   RECORD_DAY,
   JOURNAL_TYPE,
   BUDDLE_ID,
   CATALOG_ID
);

/*==============================================================*/
/* Table: DATA_VALUE                                            */
/*==============================================================*/
CREATE TABLE DATA_VALUE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAVAL                                           */
/*==============================================================*/
CREATE INDEX INDEX_DAVAL ON DATA_VALUE
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_VALUE_H                                          */
/*==============================================================*/
CREATE TABLE DATA_VALUE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024),
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAVAL_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_DAVAL_H ON DATA_VALUE_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_VARIABLE                                         */
/*==============================================================*/
CREATE TABLE DATA_VARIABLE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   VARIABLE_NAME        VARCHAR(128) COMMENT '样式单中的变量定义',
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASS                VARCHAR(256) COMMENT '处理类',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAVARI                                          */
/*==============================================================*/
CREATE INDEX INDEX_DAVARI ON DATA_VARIABLE
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DATA_VARIABLE_H                                       */
/*==============================================================*/
CREATE TABLE DATA_VARIABLE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   POSITION             INT,
   VARIABLE_NAME        VARCHAR(128),
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASS                VARCHAR(256) COMMENT '处理类',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DAVARI_H                                        */
/*==============================================================*/
CREATE INDEX INDEX_DAVARI_H ON DATA_VARIABLE_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   POSITION
);

/*==============================================================*/
/* Table: DESIGN_CATALOG                                        */
/*==============================================================*/
CREATE TABLE DESIGN_CATALOG
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   DESIGN_CODE          VARCHAR(64) COMMENT '连接标识',
   CATALOG_CODE         VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_DESIGN_CATALOG                                  */
/*==============================================================*/
CREATE INDEX INDEX_DESIGN_CATALOG ON DESIGN_CATALOG
(
   DESIGN_CODE,
   CATALOG_CODE
);

/*==============================================================*/
/* Table: EXCEPTION_RESPONSE                                    */
/*==============================================================*/
CREATE TABLE EXCEPTION_RESPONSE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   RESPONSE_FORMAT      VARCHAR(8) COMMENT 'xml、json、text',
   START_SYMBOL         VARCHAR(64),
   END_SYMBOL           VARCHAR(64),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_EXRES                                           */
/*==============================================================*/
CREATE INDEX INDEX_EXRES ON EXCEPTION_RESPONSE
(
   BUDDLE_ID,
   POSITION
);

/*==============================================================*/
/* Table: EXCEPTION_RESPONSE_H                                  */
/*==============================================================*/
CREATE TABLE EXCEPTION_RESPONSE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   RESPONSE_FORMAT      VARCHAR(8) COMMENT 'xml、json、text',
   START_SYMBOL         VARCHAR(64),
   END_SYMBOL           VARCHAR(64),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_EXRES_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_EXRES_H ON EXCEPTION_RESPONSE_H
(
   BUDDLE_ID,
   POSITION
);

/*==============================================================*/
/* Table: EXCHANGE_DESIGN                                       */
/*==============================================================*/
CREATE TABLE EXCHANGE_DESIGN
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '目录编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   NAME                 VARCHAR(128) COMMENT '目录名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (BUDDLE_ID)
);

/*==============================================================*/
/* Index: INDEX_EXDES                                           */
/*==============================================================*/
CREATE INDEX INDEX_EXDES ON EXCHANGE_DESIGN
(
   BUDDLE_ID,
   NAME
);

/*==============================================================*/
/* Table: EXCHANGE_DESIGN_H                                     */
/*==============================================================*/
CREATE TABLE EXCHANGE_DESIGN_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '目录编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   NAME                 VARCHAR(128) COMMENT '目录名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2_EXCHANGE_H (BUDDLE_ID)
);

/*==============================================================*/
/* Index: INDEX_EXDES_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_EXDES_H ON EXCHANGE_DESIGN_H
(
   BUDDLE_ID,
   NAME
);

/*==============================================================*/
/* Table: EXCHANGE_PROCESSOR                                    */
/*==============================================================*/
CREATE TABLE EXCHANGE_PROCESSOR
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '交换编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   JOB_CODE             VARCHAR(24),
   EXCHANGE_CODE        VARCHAR(24),
   OPERATION            VARCHAR(16) COMMENT '操作名字',
   START_POSITION       VARCHAR(128) COMMENT '迁移位置',
   FINISH_POSITION      VARCHAR(128) COMMENT '迁移位置',
   CURRENT_POSITION     VARCHAR(128) COMMENT '迁移位置',
   RECORD_POSITION      VARCHAR(128),
   EXCHANGE_NUMBER      NUMERIC(15,0),
   EXECUTE_TIME         NUMERIC(15,0),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_EXPRO                                           */
/*==============================================================*/
CREATE INDEX INDEX_EXPRO ON EXCHANGE_PROCESSOR
(
   EXCHANGE_CODE,
   START_POSITION
);

/*==============================================================*/
/* Table: EXPRESSION_ITEM                                       */
/*==============================================================*/
CREATE TABLE EXPRESSION_ITEM
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   EXPRESSION_CODE      VARCHAR(24),
   POSITION             INT,
   LOGICAL_SYMBOL       VARCHAR(8),
   LEFT_BRACE_NUMBER    INT,
   FIELD_NAME           VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   FIELD_TYPE           INT COMMENT '字段的sql类型',
   SQL_OPERATOR         VARCHAR(32),
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASS                VARCHAR(256) COMMENT '处理类',
   RIGHT_BRACE_NUMBER   INT,
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_EXITE                                           */
/*==============================================================*/
CREATE INDEX INDEX_EXITE ON EXPRESSION_ITEM
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   EXPRESSION_CODE,
   POSITION
);

/*==============================================================*/
/* Table: EXPRESSION_ITEM_H                                     */
/*==============================================================*/
CREATE TABLE EXPRESSION_ITEM_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   EXPRESSION_CODE      VARCHAR(24),
   POSITION             INT,
   LOGICAL_SYMBOL       VARCHAR(8),
   LEFT_BRACE_NUMBER    INT,
   FIELD_NAME           VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   FIELD_TYPE           INT COMMENT '字段的sql类型',
   SQL_OPERATOR         VARCHAR(32),
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASS                VARCHAR(256) COMMENT '处理类',
   RIGHT_BRACE_NUMBER   INT,
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_EXITE_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_EXITE_H ON EXPRESSION_ITEM_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   EXPRESSION_CODE,
   POSITION
);

/*==============================================================*/
/* Table: FIELD_CLEANOUT                                        */
/*==============================================================*/
CREATE TABLE FIELD_CLEANOUT
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   FIELD_VERIFY_CODE    VARCHAR(24),
   CLEANOUT_CODE        VARCHAR(24) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   FIRST_CONTENT        VARCHAR(256),
   SECOND_CONTENT       VARCHAR(256),
   POSITION             INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_FICLE                                     */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_FICLE ON FIELD_CLEANOUT
(
   FIELD_VERIFY_CODE,
   CLEANOUT_CODE
);

/*==============================================================*/
/* Table: FIELD_CLEANOUT_H                                      */
/*==============================================================*/
CREATE TABLE FIELD_CLEANOUT_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   FIELD_VERIFY_CODE    VARCHAR(24),
   CLEANOUT_CODE        VARCHAR(24) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   FIRST_CONTENT        VARCHAR(256),
   SECOND_CONTENT       VARCHAR(256),
   POSITION             INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_FICLE_H                                   */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_FICLE_H ON FIELD_CLEANOUT_H
(
   CLEANOUT_CODE
);

/*==============================================================*/
/* Table: FIELD_LABEL                                           */
/*==============================================================*/
CREATE TABLE FIELD_LABEL
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   RESOURCE_NAME        VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   FIELD_NAME           VARCHAR(64),
   FIELD_LABEL          VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_LABEL                                     */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_LABEL ON FIELD_LABEL
(
   IDENTIFIER,
   RESOURCE_NAME
);

/*==============================================================*/
/* Table: FIELD_LABEL_H                                         */
/*==============================================================*/
CREATE TABLE FIELD_LABEL_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   RESOURCE_NAME        VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   FIELD_NAME           VARCHAR(64),
   FIELD_LABEL          VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_LABEL_H                                   */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_LABEL_H ON FIELD_LABEL_H
(
   IDENTIFIER,
   RESOURCE_NAME
);

/*==============================================================*/
/* Table: FIELD_VERIFY                                          */
/*==============================================================*/
CREATE TABLE FIELD_VERIFY
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   RESOURCE_NAME        VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   FIELD_NAME           VARCHAR(64),
   VERIFY_CODE          VARCHAR(24) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   POSITION             INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_FIVER                                     */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_FIVER ON FIELD_VERIFY
(
   IDENTIFIER,
   RESOURCE_NAME,
   FIELD_NAME,
   VERIFY_CODE
);

/*==============================================================*/
/* Table: FIELD_VERIFY_H                                        */
/*==============================================================*/
CREATE TABLE FIELD_VERIFY_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   RESOURCE_NAME        VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   FIELD_NAME           VARCHAR(64),
   VERIFY_CODE          VARCHAR(24) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   POSITION             INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_FIVER_H                                   */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_FIVER_H ON FIELD_VERIFY_H
(
   IDENTIFIER,
   RESOURCE_NAME,
   FIELD_NAME,
   VERIFY_CODE
);

/*==============================================================*/
/* Table: INFOINGE_JOB                                          */
/*==============================================================*/
CREATE TABLE INFOINGE_JOB
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '插件编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   NAME                 VARCHAR(128) COMMENT '插件名字',
   FREQUENTNESS         VARCHAR(8) COMMENT 'year|年，month|月，day|天，hour|时，minute|分，second|秒',
   INTERVAL_TIME        INT COMMENT '是否入口插件',
   JOIN_TIME            DATETIME,
   RUN_START_HOUR       VARCHAR(8) COMMENT '是否升级',
   RUN_START_MINUTE     VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_HOUR      VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_MINUTE    VARCHAR(8) COMMENT '是否升级',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   IS_RUNNING           VARCHAR(8),
   TIMING_YEAR          VARCHAR(128) COMMENT '定时年',
   TIMING_MONTH         VARCHAR(32) COMMENT '定时年',
   TIMING_DAY           VARCHAR(128),
   TIMING_HOUR          VARCHAR(64),
   TIMING_MINUTE        VARCHAR(180),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_INFOINGE_JOB                                    */
/*==============================================================*/
CREATE INDEX INDEX_INFOINGE_JOB ON INFOINGE_JOB
(
   NAME
);

/*==============================================================*/
/* Table: INFOINGE_JOB_H                                        */
/*==============================================================*/
CREATE TABLE INFOINGE_JOB_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '插件编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   NAME                 VARCHAR(128) COMMENT '插件名字',
   FREQUENTNESS         VARCHAR(8) COMMENT 'year|年，month|月，day|天，hour|时，minute|分，second|秒',
   INTERVAL_TIME        INT COMMENT '是否入口插件',
   JOIN_TIME            DATETIME,
   RUN_START_HOUR       VARCHAR(8) COMMENT '是否升级',
   RUN_START_MINUTE     VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_HOUR      VARCHAR(8) COMMENT '是否升级',
   RUN_FINISH_MINUTE    VARCHAR(8) COMMENT '是否升级',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   IS_RUNNING           VARCHAR(8),
   TIMING_YEAR          VARCHAR(128) COMMENT '定时年',
   TIMING_MONTH         VARCHAR(32) COMMENT '定时年',
   TIMING_DAY           VARCHAR(128),
   TIMING_HOUR          VARCHAR(64),
   TIMING_MINUTE        VARCHAR(180),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_INFOINGE_JOB_H                                  */
/*==============================================================*/
CREATE INDEX INDEX_INFOINGE_JOB_H ON INFOINGE_JOB_H
(
   NAME
);

/*==============================================================*/
/* Table: ITEM_VALUE                                            */
/*==============================================================*/
CREATE TABLE ITEM_VALUE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   ITEM_CODE            VARCHAR(24),
   POSITION             INT,
   ITEM_NAME            VARCHAR(128) COMMENT '插件名字',
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   SELECT_EXPRESSION    VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_ITVAL                                           */
/*==============================================================*/
CREATE INDEX INDEX_ITVAL ON ITEM_VALUE
(
   BUDDLE_ID,
   CATALOG_ID,
   ITEM_CODE,
   POSITION
);

/*==============================================================*/
/* Table: ITEM_VALUE_H                                          */
/*==============================================================*/
CREATE TABLE ITEM_VALUE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   ITEM_CODE            VARCHAR(24),
   POSITION             INT,
   ITEM_NAME            VARCHAR(128) COMMENT '插件名字',
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   SELECT_EXPRESSION    VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_ITVAL_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_ITVAL_H ON ITEM_VALUE_H
(
   BUDDLE_ID,
   CATALOG_ID,
   ITEM_CODE,
   POSITION
);

/*==============================================================*/
/* Table: JOB_CATALOG                                           */
/*==============================================================*/
CREATE TABLE JOB_CATALOG
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   JOB_CODE             VARCHAR(64) COMMENT '连接标识',
   BUDDLE_ID            VARCHAR(64),
   BUDDLE_NAME          VARCHAR(128),
   CATALOG_ID           VARCHAR(64),
   CATALOG_NAME         VARCHAR(128),
   CATALOG_CODE         VARCHAR(128),
   POSITION             INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_JOB_CATALOG                                     */
/*==============================================================*/
CREATE INDEX INDEX_JOB_CATALOG ON JOB_CATALOG
(
   JOB_CODE,
   POSITION
);

/*==============================================================*/
/* Table: JOB_CATALOG_H                                         */
/*==============================================================*/
CREATE TABLE JOB_CATALOG_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   JOB_CODE             VARCHAR(64) COMMENT '连接标识',
   BUDDLE_ID            VARCHAR(64),
   BUDDLE_NAME          VARCHAR(128),
   CATALOG_ID           VARCHAR(64),
   CATALOG_NAME         VARCHAR(128),
   CATALOG_CODE         VARCHAR(128),
   POSITION             INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_JOB_CATALOG_H                                   */
/*==============================================================*/
CREATE INDEX INDEX_JOB_CATALOG_H ON JOB_CATALOG_H
(
   JOB_CODE,
   POSITION
);

/*==============================================================*/
/* Table: JOB_JOURNAL                                           */
/*==============================================================*/
CREATE TABLE JOB_JOURNAL
(
   CODE                 VARCHAR(24) NOT NULL,
   RECORD_HOST          VARCHAR(128),
   RECORD_YEAR          INT,
   RECORD_MONTH         INT,
   RECORD_DAY           INT,
   RECORD_HOUR          INT,
   RECORD_MINUTE        INT,
   RECORD_SECOND        INT,
   RECORD_MILLISCOND    NUMERIC(16,0) COMMENT '处理顺序',
   REQUEST_ID           VARCHAR(128),
   REQUEST_IP           VARCHAR(128),
   ACCOUNT_NAME         VARCHAR(64),
   JOURNAL_TYPE         INT COMMENT '0：登录，1：功能，2：迁移，3：同步，4：定时任务',
   BUDDLE_ID            VARCHAR(64),
   BUDDLE_NAME          VARCHAR(128),
   CATALOG_ID           VARCHAR(64),
   CATALOG_NAME         VARCHAR(128),
   DATA_CODE            VARCHAR(128),
   DATA_NAME            VARCHAR(128),
   POSITION             INT COMMENT '处理顺序',
   OPERATE_TIMES        INT,
   OPERATE_RESULT       VARCHAR(16),
   EFFECT_NUMBER        INT,
   ERROR_ID             VARCHAR(256),
   LOCATION             VARCHAR(256),
   DESCRIPTION          VARCHAR(512),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_JOB_JOURNAL                                     */
/*==============================================================*/
CREATE INDEX INDEX_JOB_JOURNAL ON JOB_JOURNAL
(
   RECORD_HOST,
   RECORD_YEAR,
   RECORD_MONTH,
   RECORD_DAY,
   RECORD_HOUR,
   RECORD_MINUTE,
   RECORD_SECOND,
   RECORD_MILLISCOND
);

/*==============================================================*/
/* Table: LANGUAGE                                              */
/*==============================================================*/
CREATE TABLE LANGUAGE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '语言编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   NAME                 VARCHAR(16) COMMENT '语言名字',
   ENCODING             VARCHAR(16) COMMENT '字符集',
   MAPPING              VARCHAR(16),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (NAME)
);

/*==============================================================*/
/* Index: INDEX_LANGUAGE                                        */
/*==============================================================*/
CREATE INDEX INDEX_LANGUAGE ON LANGUAGE
(
   NAME
);

/*==============================================================*/
/* Table: LANGUAGE_H                                            */
/*==============================================================*/
CREATE TABLE LANGUAGE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '语言编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   NAME                 VARCHAR(16) COMMENT '语言名字',
   ENCODING             VARCHAR(16) COMMENT '字符集',
   MAPPING              VARCHAR(16),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_LANGUAGE_H                                      */
/*==============================================================*/
CREATE INDEX INDEX_LANGUAGE_H ON LANGUAGE_H
(
   NAME
);

/*==============================================================*/
/* Table: LOGON_ACCOUNT                                         */
/*==============================================================*/
CREATE TABLE LOGON_ACCOUNT
(
   CODE                 VARCHAR(24) NOT NULL,
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   PERSON_CODE          VARCHAR(24),
   ACCOUNT_NAME         VARCHAR(64) COMMENT 'address:地址,email:电子邮箱,tele:座机号码,mobil:移动电话,fax:传真',
   TYPE                 VARCHAR(16) COMMENT 'manager:管理员, normal:普通',
   ACCOUNT_PASSWORD     VARCHAR(256),
   STATUS               VARCHAR(32) COMMENT 'register：注册，missing：缺少资料，official：正式，warning：警告，pause：暂停',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (ACCOUNT_NAME)
);

/*==============================================================*/
/* Index: INDEX_LOACC                                           */
/*==============================================================*/
CREATE INDEX INDEX_LOACC ON LOGON_ACCOUNT
(
   PERSON_CODE,
   ACCOUNT_NAME
);

/*==============================================================*/
/* Table: LOGON_ACCOUNT_H                                       */
/*==============================================================*/
CREATE TABLE LOGON_ACCOUNT_H
(
   CODE                 VARCHAR(24) NOT NULL,
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   PERSON_CODE          VARCHAR(24),
   ACCOUNT_NAME         VARCHAR(64) COMMENT 'address:地址,email:电子邮箱,tele:座机号码,mobil:移动电话,fax:传真',
   TYPE                 VARCHAR(16) COMMENT 'manager:管理员, normal:普通',
   ACCOUNT_PASSWORD     VARCHAR(256),
   STATUS               VARCHAR(32) COMMENT 'register：注册，missing：缺少资料，official：正式，warning：警告，pause：暂停',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_LOACC_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_LOACC_H ON LOGON_ACCOUNT_H
(
   PERSON_CODE,
   ACCOUNT_NAME
);

/*==============================================================*/
/* Table: PERMISSION_CONTROL                                    */
/*==============================================================*/
CREATE TABLE PERMISSION_CONTROL
(
   CODE                 VARCHAR(24) NOT NULL,
   OWNER_TYPE           VARCHAR(16) COMMENT 'organization:单位（行政区划）,department:部门,duty:职务（角色）,person:个人',
   OWNER_CODE           VARCHAR(64),
   BUDDLE_ID            VARCHAR(64),
   CATALOG_ID           VARCHAR(64),
   OPERATION            VARCHAR(16) COMMENT '操作名字',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_PECON                                           */
/*==============================================================*/
CREATE INDEX INDEX_PECON ON PERMISSION_CONTROL
(
   OWNER_TYPE,
   OWNER_CODE,
   CATALOG_ID
);

/*==============================================================*/
/* Table: PREFIX_CODE                                           */
/*==============================================================*/
CREATE TABLE PREFIX_CODE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0) COMMENT '修改序列',
   CHANGE_NUMBER        NUMERIC(8,0) COMMENT '修改次数',
   SECRET               NUMERIC(4,0) COMMENT '秘密',
   SECRECY              NUMERIC(4,0) COMMENT '设置秘密',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64) COMMENT '所有者',
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '连接标识',
   HOST                 VARCHAR(128) COMMENT '服务地址',
   PRECODE              VARCHAR(64) COMMENT '前端编码',
   IS_SYNCED_DSB        VARCHAR(8) COMMENT '是否已同步总线',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_PREFIX_CODE                                     */
/*==============================================================*/
CREATE INDEX INDEX_PREFIX_CODE ON PREFIX_CODE
(
   IDENTIFIER,
   HOST
);

/*==============================================================*/
/* Table: PREFIX_CODE_H                                         */
/*==============================================================*/
CREATE TABLE PREFIX_CODE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0) COMMENT '修改序列',
   CHANGE_NUMBER        NUMERIC(8,0) COMMENT '修改次数',
   SECRET               NUMERIC(4,0) COMMENT '秘密',
   SECRECY              NUMERIC(4,0) COMMENT '设置秘密',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64) COMMENT '所有者',
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '连接标识',
   HOST                 VARCHAR(128) COMMENT '服务地址',
   PRECODE              VARCHAR(64) COMMENT '前端编码',
   IS_SYNCED_DSB        VARCHAR(8) COMMENT '是否已同步总线',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_PREFIX_CODE_H                                   */
/*==============================================================*/
CREATE INDEX INDEX_PREFIX_CODE_H ON PREFIX_CODE_H
(
   IDENTIFIER,
   HOST
);

/*==============================================================*/
/* Table: PROCESSOR                                             */
/*==============================================================*/
CREATE TABLE PROCESSOR
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   CLASS                VARCHAR(256) COMMENT '处理类',
   CLASSIFY             VARCHAR(32),
   NAME                 VARCHAR(128) COMMENT '字段名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   TYPE                 VARCHAR(32) COMMENT '1.Hinge：枢纽处理类，2.DB：数据库驱动，3.WS：WEB服务接口',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2_PROCTRAC (CLASS)
);

/*==============================================================*/
/* Index: INDEX_PROCESSOR                                       */
/*==============================================================*/
CREATE INDEX INDEX_PROCESSOR ON PROCESSOR
(
   CLASS
);

/*==============================================================*/
/* Table: PROCESSOR_H                                           */
/*==============================================================*/
CREATE TABLE PROCESSOR_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   CLASS                VARCHAR(256) COMMENT '处理类',
   CLASSIFY             VARCHAR(32),
   NAME                 VARCHAR(128) COMMENT '字段名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   TYPE                 VARCHAR(32) COMMENT '1.Hinge：讯枢处理类，2.DB：数据库驱动，3.WS：Web服务接口类',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_PROCESSOR_H                                     */
/*==============================================================*/
CREATE INDEX INDEX_PROCESSOR_H ON PROCESSOR_H
(
   CLASS
);

/*==============================================================*/
/* Table: QUOTE                                                 */
/*==============================================================*/
CREATE TABLE QUOTE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24) COMMENT '数据编码',
   NAME                 VARCHAR(128) COMMENT '字段名字',
   EXPRESSION           VARCHAR(512) COMMENT '转换表达式',
   CLASS                VARCHAR(256) COMMENT '处理类',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (DATA_CODE, NAME)
);

/*==============================================================*/
/* Index: INDEX_QUOTE                                           */
/*==============================================================*/
CREATE INDEX INDEX_QUOTE ON QUOTE
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   NAME
);

/*==============================================================*/
/* Table: QUOTE_H                                               */
/*==============================================================*/
CREATE TABLE QUOTE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24) COMMENT '数据编码',
   NAME                 VARCHAR(128) COMMENT '字段名字',
   EXPRESSION           VARCHAR(512) COMMENT '转换表达式',
   CLASS                VARCHAR(256) COMMENT '处理类',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_QUOTE_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_QUOTE_H ON QUOTE_H
(
   BUDDLE_ID,
   CATALOG_ID,
   DATA_CODE,
   NAME
);

/*==============================================================*/
/* Table: RELEASE_HOST                                          */
/*==============================================================*/
CREATE TABLE RELEASE_HOST
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   ADDRESS              VARCHAR(128),
   HOST_NAME            VARCHAR(128) COMMENT '处理类',
   NAME                 VARCHAR(128) COMMENT '字段名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_RHO                                             */
/*==============================================================*/
CREATE INDEX INDEX_RHO ON RELEASE_HOST
(
   ADDRESS
);

/*==============================================================*/
/* Table: RELEASE_HOST_H                                        */
/*==============================================================*/
CREATE TABLE RELEASE_HOST_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   ADDRESS              VARCHAR(128),
   HOST_NAME            VARCHAR(128) COMMENT '处理类',
   NAME                 VARCHAR(128) COMMENT '字段名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_RHO_H                                           */
/*==============================================================*/
CREATE INDEX INDEX_RHO_H ON RELEASE_HOST_H
(
   ADDRESS
);

/*==============================================================*/
/* Table: REPLACE_HOST                                          */
/*==============================================================*/
CREATE TABLE REPLACE_HOST
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   IDENTIFIER           VARCHAR(64) COMMENT '连接标识',
   TABLE_NAME           VARCHAR(128),
   FILED_NAME           VARCHAR(128),
   OLD_IP               VARCHAR(15),
   REPLACE_IP           VARCHAR(15),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_REPLACE_HOST                                    */
/*==============================================================*/
CREATE INDEX INDEX_REPLACE_HOST ON REPLACE_HOST
(
   IDENTIFIER,
   TABLE_NAME,
   FILED_NAME
);

/*==============================================================*/
/* Table: RESOURCE_CONNECTION                                   */
/*==============================================================*/
CREATE TABLE RESOURCE_CONNECTION
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '连接标识',
   NAME                 VARCHAR(128) COMMENT '连接名字',
   TYPE                 VARCHAR(32) COMMENT '连接类型',
   DRIVER               VARCHAR(128) COMMENT '驱动器名',
   HOST                 VARCHAR(128) COMMENT '服务地址',
   PORT                 VARCHAR(8) COMMENT '服务端口',
   INSTANCE             VARCHAR(64) COMMENT '数据实例',
   PATTERN              VARCHAR(64) COMMENT '方案标识',
   ACCOUNT              VARCHAR(128) COMMENT '访问帐号',
   PASSWORD             VARCHAR(128) COMMENT '访问密码',
   MAX_NUMBER           VARCHAR(8) COMMENT '最大连接数',
   TIMEOUT              VARCHAR(16) COMMENT '超时设置',
   TEMPLATE             VARCHAR(256) COMMENT '连接模板',
   IS_LOCKED            VARCHAR(8),
   IS_LOCAL             VARCHAR(8),
   IS_DSB               VARCHAR(8),
   BUFFER_POOL_SIZE     NUMERIC(13,0),
   DECOMPOSING_CODE     VARCHAR(24),
   REG_STATUS           VARCHAR(32) COMMENT '存放（空值）、regist（注册）、work（工作）、refuse（拒绝）',
   REG_REASON           VARCHAR(128),
   GPS_LOCATION         VARCHAR(128) COMMENT '服务地址',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CONNECTOR                                       */
/*==============================================================*/
CREATE INDEX INDEX_CONNECTOR ON RESOURCE_CONNECTION
(
   HOST,
   PORT,
   PATTERN,
   INSTANCE
);

/*==============================================================*/
/* Table: RESOURCE_CONNECTION_H                                 */
/*==============================================================*/
CREATE TABLE RESOURCE_CONNECTION_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '连接标识',
   NAME                 VARCHAR(128) COMMENT '连接名字',
   TYPE                 VARCHAR(32) COMMENT '连接类型',
   DRIVER               VARCHAR(128) COMMENT '驱动器名',
   HOST                 VARCHAR(128) COMMENT '服务地址',
   PORT                 VARCHAR(8) COMMENT '服务端口',
   INSTANCE             VARCHAR(64) COMMENT '数据实例',
   PATTERN              VARCHAR(64) COMMENT '方案标识',
   ACCOUNT              VARCHAR(128) COMMENT '访问帐号',
   PASSWORD             VARCHAR(128) COMMENT '访问密码',
   MAX_NUMBER           VARCHAR(8) COMMENT '最大连接数',
   TIMEOUT              VARCHAR(16) COMMENT '超时设置',
   TEMPLATE             VARCHAR(256) COMMENT '连接模板',
   IS_LOCKED            VARCHAR(8),
   IS_LOCAL             VARCHAR(8),
   IS_DSB               VARCHAR(8),
   BUFFER_POOL_SIZE     NUMERIC(13,0),
   DECOMPOSING_CODE     VARCHAR(24),
   REG_STATUS           VARCHAR(32) COMMENT '存放（空值）、regist（注册）、work（工作）、refuse（拒绝）',
   REG_REASON           VARCHAR(128),
   GPS_LOCATION         VARCHAR(128) COMMENT '服务地址',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_CONNECTOR_H                                     */
/*==============================================================*/
CREATE INDEX INDEX_CONNECTOR_H ON RESOURCE_CONNECTION_H
(
   HOST,
   PORT,
   PATTERN,
   INSTANCE
);

/*==============================================================*/
/* Table: RESOURCE_DECOMPOSING                                  */
/*==============================================================*/
CREATE TABLE RESOURCE_DECOMPOSING
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '连接标识',
   NAME                 VARCHAR(128) COMMENT '连接名字',
   TYPE                 VARCHAR(32) COMMENT '连接类型',
   DRIVER               VARCHAR(128) COMMENT '驱动器名',
   HOST                 VARCHAR(128) COMMENT '服务地址',
   PORT                 VARCHAR(8) COMMENT '服务端口',
   INSTANCE             VARCHAR(64) COMMENT '数据实例',
   PATTERN              VARCHAR(64) COMMENT '方案标识',
   ACCOUNT              VARCHAR(128) COMMENT '访问帐号',
   PASSWORD             VARCHAR(128) COMMENT '访问密码',
   MAX_NUMBER           VARCHAR(8) COMMENT '最大连接数',
   TIMEOUT              VARCHAR(16) COMMENT '超时设置',
   TEMPLATE             VARCHAR(256) COMMENT '连接模板',
   IS_LOCKED            VARCHAR(8),
   IS_DSB               VARCHAR(8),
   BUFFER_POOL_SIZE     NUMERIC(13,0),
   YEAR_ID              NUMERIC(8,0),
   MONTH_ID             NUMERIC(8,0),
   DAY_ID               NUMERIC(8,0),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_RESOURCE                                        */
/*==============================================================*/
CREATE INDEX INDEX_RESOURCE ON RESOURCE_DECOMPOSING
(
   IDENTIFIER,
   YEAR_ID,
   MONTH_ID,
   DAY_ID
);

/*==============================================================*/
/* Table: RESOURCE_DECOMPOSING_H                                */
/*==============================================================*/
CREATE TABLE RESOURCE_DECOMPOSING_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '连接标识',
   NAME                 VARCHAR(128) COMMENT '连接名字',
   TYPE                 VARCHAR(32) COMMENT '连接类型',
   DRIVER               VARCHAR(128) COMMENT '驱动器名',
   HOST                 VARCHAR(128) COMMENT '服务地址',
   PORT                 VARCHAR(8) COMMENT '服务端口',
   INSTANCE             VARCHAR(64) COMMENT '数据实例',
   PATTERN              VARCHAR(64) COMMENT '方案标识',
   ACCOUNT              VARCHAR(128) COMMENT '访问帐号',
   PASSWORD             VARCHAR(128) COMMENT '访问密码',
   MAX_NUMBER           VARCHAR(8) COMMENT '最大连接数',
   TIMEOUT              VARCHAR(16) COMMENT '超时设置',
   TEMPLATE             VARCHAR(256) COMMENT '连接模板',
   IS_LOCKED            VARCHAR(8),
   IS_DSB               VARCHAR(8),
   BUFFER_POOL_SIZE     NUMERIC(13,0),
   YEAR_ID              NUMERIC(8,0),
   MONTH_ID             NUMERIC(8,0),
   DAY_ID               NUMERIC(8,0),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_RESOURCE_H                                      */
/*==============================================================*/
CREATE INDEX INDEX_RESOURCE_H ON RESOURCE_DECOMPOSING_H
(
   IDENTIFIER,
   YEAR_ID,
   MONTH_ID,
   DAY_ID
);

/*==============================================================*/
/* Table: RESOURCE_DEFINITION                                   */
/*==============================================================*/
CREATE TABLE RESOURCE_DEFINITION
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   RESOURCE_NAME        VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   RESOURCE_DIAPLAY     VARCHAR(128),
   INDEX_FIELD          VARCHAR(128),
   SORT_POSITION        VARCHAR(128),
   IS_LOAD              VARCHAR(8),
   LOAD_MODE            VARCHAR(64) COMMENT 'distributed:分布式，replica:单独拷贝',
   REPLICA_NUMBER       NUMERIC(4,0),
   CLASS_NAME           VARCHAR(256),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2_RESDEFIN (IDENTIFIER, RESOURCE_NAME)
);

/*==============================================================*/
/* Index: INDEX_RESOURCE_DEFINITION                             */
/*==============================================================*/
CREATE INDEX INDEX_RESOURCE_DEFINITION ON RESOURCE_DEFINITION
(
   RESOURCE_NAME
);

/*==============================================================*/
/* Table: RESOURCE_DEFINITION_H                                 */
/*==============================================================*/
CREATE TABLE RESOURCE_DEFINITION_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '下一次建立分表的数据库连接标识',
   RESOURCE_NAME        VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   RESOURCE_DIAPLAY     VARCHAR(128),
   INDEX_FIELD          VARCHAR(128),
   SORT_POSITION        VARCHAR(128),
   IS_LOAD              VARCHAR(8),
   LOAD_MODE            VARCHAR(64) COMMENT 'distributed:分布式，replica:单独拷贝',
   REPLICA_NUMBER       NUMERIC(4,0),
   CLASS_NAME           VARCHAR(256),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2_RDEFINITION_H (IDENTIFIER, RESOURCE_NAME)
);

/*==============================================================*/
/* Index: INDEX_RESOURCE_DEFINITION_H                           */
/*==============================================================*/
CREATE INDEX INDEX_RESOURCE_DEFINITION_H ON RESOURCE_DEFINITION_H
(
   RESOURCE_NAME
);

/*==============================================================*/
/* Table: RESOURCE_LABEL                                        */
/*==============================================================*/
CREATE TABLE RESOURCE_LABEL
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   RESOURCE_NAME        VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   RESOURCE_LABEL       VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_RESOURCE_LABEL                                  */
/*==============================================================*/
CREATE INDEX INDEX_RESOURCE_LABEL ON RESOURCE_LABEL
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: RESOURCE_LABEL_H                                      */
/*==============================================================*/
CREATE TABLE RESOURCE_LABEL_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   RESOURCE_NAME        VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   RESOURCE_LABEL       VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_RESOURCE_LABEL_H                                */
/*==============================================================*/
CREATE INDEX INDEX_RESOURCE_LABEL_H ON RESOURCE_LABEL_H
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: RESOURCE_RELEVANCE                                    */
/*==============================================================*/
CREATE TABLE RESOURCE_RELEVANCE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   S_IDENTIFIER         VARCHAR(64),
   S_RESOURCE_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   S_RESOURCE_DIAPLAY   VARCHAR(128),
   S_FIELD              VARCHAR(128),
   R_IDENTIFIER         VARCHAR(64),
   R_RESOURCE_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   R_RESOURCE_DIAPLAY   VARCHAR(128),
   R_FIELD              VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_RESOURCE_RELEVANCE                              */
/*==============================================================*/
CREATE INDEX INDEX_RESOURCE_RELEVANCE ON RESOURCE_RELEVANCE
(
   S_IDENTIFIER,
   S_RESOURCE_NAME,
   S_FIELD
);

/*==============================================================*/
/* Table: RESOURCE_RELEVANCE_H                                  */
/*==============================================================*/
CREATE TABLE RESOURCE_RELEVANCE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   S_IDENTIFIER         VARCHAR(64),
   S_RESOURCE_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   S_RESOURCE_DIAPLAY   VARCHAR(128),
   S_FIELD              VARCHAR(128),
   R_IDENTIFIER         VARCHAR(64),
   R_RESOURCE_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   R_RESOURCE_DIAPLAY   VARCHAR(128),
   R_FIELD              VARCHAR(128),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_RESOURCE_RELEVANCE_H                            */
/*==============================================================*/
CREATE INDEX INDEX_RESOURCE_RELEVANCE_H ON RESOURCE_RELEVANCE_H
(
   S_IDENTIFIER,
   S_RESOURCE_NAME,
   S_FIELD
);

/*==============================================================*/
/* Table: RESPONSE_ITEM                                         */
/*==============================================================*/
CREATE TABLE RESPONSE_ITEM
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   RESPONSE_CODE        VARCHAR(24),
   POSITION             INT,
   ITEM_NAME            VARCHAR(128) COMMENT '插件名字',
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   START_SYMBOL         VARCHAR(64),
   END_SYMBOL           VARCHAR(64),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_REITE                                           */
/*==============================================================*/
CREATE INDEX INDEX_REITE ON RESPONSE_ITEM
(
   BUDDLE_ID,
   CATALOG_ID,
   RESPONSE_CODE,
   POSITION
);

/*==============================================================*/
/* Table: RESPONSE_ITEM_H                                       */
/*==============================================================*/
CREATE TABLE RESPONSE_ITEM_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   RESPONSE_CODE        VARCHAR(24),
   POSITION             INT,
   ITEM_NAME            VARCHAR(128) COMMENT '插件名字',
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   IS_FOR_EACH          VARCHAR(8),
   SELECT_EXPRESSION    VARCHAR(1024),
   START_SYMBOL         VARCHAR(64),
   END_SYMBOL           VARCHAR(64),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_REITE_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_REITE_H ON RESPONSE_ITEM_H
(
   BUDDLE_ID,
   CATALOG_ID,
   RESPONSE_CODE,
   POSITION
);

/*==============================================================*/
/* Table: STYLE                                                 */
/*==============================================================*/
CREATE TABLE STYLE
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '风格编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '风格标识',
   NAME                 VARCHAR(128) COMMENT '风格名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE),
   KEY AK_KEY_2 (IDENTIFIER)
);

/*==============================================================*/
/* Index: INDEX_STYLE                                           */
/*==============================================================*/
CREATE INDEX INDEX_STYLE ON STYLE
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: STYLE_H                                               */
/*==============================================================*/
CREATE TABLE STYLE_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '风格编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64) COMMENT '风格标识',
   NAME                 VARCHAR(128) COMMENT '风格名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_STYLE_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_STYLE_H ON STYLE_H
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: SYNERGY                                               */
/*==============================================================*/
CREATE TABLE SYNERGY
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '风格编码',
   ADDRESS              VARCHAR(64),
   REFRESH_TIME         DATETIME,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Table: TAG_ITEM                                              */
/*==============================================================*/
CREATE TABLE TAG_ITEM
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   TAG_CODE             VARCHAR(24),
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024) COMMENT '用于判断是否输出指定条件的样式文件部分',
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASS                VARCHAR(256) COMMENT '处理类',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_TAITE                                           */
/*==============================================================*/
CREATE INDEX INDEX_TAITE ON TAG_ITEM
(
   BUDDLE_ID,
   CATALOG_ID,
   TAG_CODE,
   POSITION
);

/*==============================================================*/
/* Table: TAG_ITEM_H                                            */
/*==============================================================*/
CREATE TABLE TAG_ITEM_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   TAG_CODE             VARCHAR(24),
   POSITION             INT,
   TEST_EXPRESSION      VARCHAR(1024),
   SELECT_EXPRESSION    VARCHAR(1024),
   CLASS                VARCHAR(256) COMMENT '处理类',
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_TAITE_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_TAITE_H ON TAG_ITEM_H
(
   BUDDLE_ID,
   CATALOG_ID,
   TAG_CODE,
   POSITION
);

/*==============================================================*/
/* Table: TOPOLOGY                                              */
/*==============================================================*/
CREATE TABLE TOPOLOGY
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   CONNECTION_ID        VARCHAR(256) COMMENT '连接标识',
   CONNECTION_NAME      VARCHAR(128) COMMENT '连接名字',
   POSITION             VARCHAR(256) COMMENT '1.Hinge：枢纽处理类，2.DB：数据库驱动，3.WS：WEB服务接口',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Table: TRUSTING_HOST                                         */
/*==============================================================*/
CREATE TABLE TRUSTING_HOST
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   ADDRESS              VARCHAR(128),
   HOST_NAME            VARCHAR(128) COMMENT '处理类',
   NAME                 VARCHAR(128) COMMENT '字段名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_THO                                             */
/*==============================================================*/
CREATE INDEX INDEX_THO ON TRUSTING_HOST
(
   ADDRESS
);

/*==============================================================*/
/* Table: TRUSTING_HOST_H                                       */
/*==============================================================*/
CREATE TABLE TRUSTING_HOST_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '引用编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   ADDRESS              VARCHAR(128),
   HOST_NAME            VARCHAR(128) COMMENT '处理类',
   NAME                 VARCHAR(128) COMMENT '字段名字',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_THO_H                                           */
/*==============================================================*/
CREATE INDEX INDEX_THO_H ON TRUSTING_HOST_H
(
   ADDRESS
);

/*==============================================================*/
/* Table: VALUE_TAG                                             */
/*==============================================================*/
CREATE TABLE VALUE_TAG
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   DATA_CODE            VARCHAR(24),
   VALUE_CODE           VARCHAR(24),
   POSITION             INT,
   TAG_NAME             VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_VATAG                                           */
/*==============================================================*/
CREATE INDEX INDEX_VATAG ON VALUE_TAG
(
   BUDDLE_ID,
   CATALOG_ID,
   VALUE_CODE,
   POSITION
);

/*==============================================================*/
/* Table: VALUE_TAG_H                                           */
/*==============================================================*/
CREATE TABLE VALUE_TAG_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '映射编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   BUDDLE_ID            VARCHAR(64) COMMENT '插件标识',
   CATALOG_ID           VARCHAR(64) COMMENT '目录编码',
   VALUE_CODE           VARCHAR(24),
   POSITION             INT,
   TAG_NAME             VARCHAR(1024),
   CONNECTION_CODE      VARCHAR(24) COMMENT '数据库连接编码',
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_VATAG_H                                         */
/*==============================================================*/
CREATE INDEX INDEX_VATAG_H ON VALUE_TAG_H
(
   BUDDLE_ID,
   CATALOG_ID,
   VALUE_CODE,
   POSITION
);

/*==============================================================*/
/* Table: VERIFY_CLEANOUT                                       */
/*==============================================================*/
CREATE TABLE VERIFY_CLEANOUT
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   VERIFY_CODE          VARCHAR(24),
   CLEANOUT_CODE        VARCHAR(24) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   FIRST_CONTENT        VARCHAR(256),
   SECOND_CONTENT       VARCHAR(256),
   POSITION             INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_VECLE                                     */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_VECLE ON VERIFY_CLEANOUT
(
   VERIFY_CODE,
   CLEANOUT_CODE
);

/*==============================================================*/
/* Table: VERIFY_CLEANOUT_H                                     */
/*==============================================================*/
CREATE TABLE VERIFY_CLEANOUT_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   VERIFY_CODE          VARCHAR(24),
   CLEANOUT_CODE        VARCHAR(24) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   FIRST_CONTENT        VARCHAR(256),
   SECOND_CONTENT       VARCHAR(256),
   POSITION             INT,
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_VECLE_H                                   */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_VECLE_H ON VERIFY_CLEANOUT_H
(
   VERIFY_CODE,
   CLEANOUT_CODE
);

/*==============================================================*/
/* Table: VERIFY_REGULATION                                     */
/*==============================================================*/
CREATE TABLE VERIFY_REGULATION
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   REGULATION_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   REGULATION           VARCHAR(256) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   CLASS                VARCHAR(256) COMMENT '处理类',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_VEREG                                     */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_VEREG ON VERIFY_REGULATION
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: VERIFY_REGULATION_H                                   */
/*==============================================================*/
CREATE TABLE VERIFY_REGULATION_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '连接编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   REGULATION_NAME      VARCHAR(64) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   REGULATION           VARCHAR(256) COMMENT '包括所有的表和视图,最初的连接标识+":"+表名',
   CLASS                VARCHAR(256) COMMENT '处理类',
   DESCRIPTION          VARCHAR(256) COMMENT '描述',
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_FIELD_VEREG_H                                   */
/*==============================================================*/
CREATE INDEX INDEX_FIELD_VEREG_H ON VERIFY_REGULATION_H
(
   IDENTIFIER
);

/*==============================================================*/
/* Table: VOCABULARY                                            */
/*==============================================================*/
CREATE TABLE VOCABULARY
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '风格编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   KEYWORD              VARCHAR(128),
   CONTENT              VARCHAR(512),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_VOCABULARY                                      */
/*==============================================================*/
CREATE INDEX INDEX_VOCABULARY ON VOCABULARY
(
   IDENTIFIER,
   KEYWORD
);

/*==============================================================*/
/* Table: VOCABULARY_H                                          */
/*==============================================================*/
CREATE TABLE VOCABULARY_H
(
   CODE                 VARCHAR(24) NOT NULL COMMENT '风格编码',
   IS_ACTIVE            VARCHAR(8) COMMENT '是否使用',
   CHANGE_FROM          VARCHAR(24) COMMENT '记录来源',
   CHANGE_INDEX         NUMERIC(8,0),
   CHANGE_NUMBER        NUMERIC(8,0),
   SECRET               NUMERIC(4,0),
   SECRECY              NUMERIC(4,0) COMMENT '密级',
   BUILDER              VARCHAR(64) COMMENT '创建者',
   OWNER                VARCHAR(64),
   START_DATE           NUMERIC(15,0) COMMENT '开始使用日期',
   END_DATE             NUMERIC(15,0) COMMENT '结束使用日期',
   IDENTIFIER           VARCHAR(64),
   KEYWORD              VARCHAR(128),
   CONTENT              VARCHAR(512),
   CONNECTION_CODE      VARCHAR(24),
   PRIMARY KEY (CODE)
);

/*==============================================================*/
/* Index: INDEX_VOCABULARY_H                                    */
/*==============================================================*/
CREATE INDEX INDEX_VOCABULARY_H ON VOCABULARY_H
(
   IDENTIFIER,
   KEYWORD
);

